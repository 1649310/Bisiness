window.ITVDN = {};

(function() {
  var me = {};

  me.isEmail = function(email) {
    var re = /^(|(([A-Za-z0-9]+_+)|([A-Za-z0-9]+\-+)|([A-Za-z0-9]+\.+)|([A-Za-z0-9]+\++))*[A-Za-z0-9]+@((\w+\-+)|(\w+\.))*\w{1,63}\.[a-zA-Z]{2,6})$/;
    return re.test(email);
  };

  me.isNumber = function(number) {
    var re = /^\d+$/;
    return re.test(number);
  };

  me.isNotEmpty = function(str) {
    return Boolean(str);
  };
  ITVDN.validation = me;
})();

(function() {
  var me = {};
  var form = document.querySelector(".form-container");
  var closeButton = null;

  function onClose() {
    me.close();
    closeButton.removeEventListener("click", onClose);
  }

  me.open = function() {
    form.classList.remove("is-hidden");

    closeButton = document.querySelector(".form__close-button");
    closeButton.addEventListener("click", onClose);
  };
  me.close = function() {
    form.classList.add("is-hidden");
  };

  me.isValid = function() {
    var requiredFields = document.querySelectorAll('[data-valid="required"]');
    var emailValue = document.querySelector("[data-email]").value;
    var numberValue = document.querySelector("[data-number").value;

    if (!me.isAllCompleted(requiredFields)) {
      console.log("Заполните пожалуйста все необходимые поля");
      return false;
    } else if (!ITVDN.validation.isEmail(emailValue)) {
      alert("Не верный email");
      return false;
    } else if (!ITVDN.validation.isNumber(numberValue)) {
      console.log("Не верный номер");
      return false;
    }
    return true;
  };

  me.isAllCompleted = function(data) {
    var result = true;
    for (var i = 0; i < data.lenght; i++) {
      if (!ITVDN.validation.isNotEmpty(data[i].value)) {
        rusult = false;
        break;
      }
    }
    return result;
  };
  ITVDN.form = me;
})();

(function() {
  var me = {};

  me.toggleToActiveLink = function(target) {
    var links = document.querySelectorAll(".nav__link");
    var showedSection = target.dataset.link;

    for (var i = 0; i < links.length; i++) {
      if (links[i].classList.contains("nav__link--active")) {
        links[i].classList.remove("nav__link--active");
      }
    }
    target.classList.add("nav__link--active");
    scrollToActiveSection(showedSection);
  };

  function scrollToActiveSection(showedSection) {
    var section = document.querySelector("." + showedSection);
    var coords = section.getBoundingClientRect();
    var animateTime = 0.4;
  }

  var timerId = setInterval(function() {
    if (document.body.scrollTop < coords.top) {
      window.scrollBy(0, 10);
    } else {
      clearInterval(timerId);
    }
  }, animateTime || 0.5);

  ITVDN.navigation = me;
})();

(function() {
  //Add event listener for open form button
  var openFormButton = document.querySelector(".arrow-down");
  var form = document.querySelector(".form");
  var nav = document.querySelector(".nav");

  if (openFormButton) {
    openFormButton.addEventListener("click", function(e) {
      e.preventDefault();
      ITVDN.form.open();
    });
  }

  if (form) {
    form.addEventListener("submit", function(e) {
      e.preventDefault();
      if (ITVDN.form.isValid()) {
        console.log("All good");
      } else {
        console.log("Is not valid");
      }
    });
  }
  if (nav) {
    nav.addEventListener("click", function(e) {
      var target = e.target;

      if (target.tagName.toLowerCase() !== "a") {
        return;
      }

      e.preventDefault();
      ITVDN.navigation.toggleToActiveLink(target);
    });
  }
})();

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluaXQuanMiLCJ2YWxpZGF0aW9uLmpzIiwiZm9ybS5qcyIsIm5hdmlnYXRpb24uanMiLCJtYWluLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQ2xCQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUNsREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDaENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6Im1haW4ubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsid2luZG93LklUVkROID0ge307XHJcbiIsIihmdW5jdGlvbigpIHtcclxuICB2YXIgbWUgPSB7fTtcclxuXHJcbiAgbWUuaXNFbWFpbCA9IGZ1bmN0aW9uKGVtYWlsKSB7XHJcbiAgICB2YXIgcmUgPSAvXih8KChbQS1aYS16MC05XStfKyl8KFtBLVphLXowLTldK1xcLSspfChbQS1aYS16MC05XStcXC4rKXwoW0EtWmEtejAtOV0rXFwrKykpKltBLVphLXowLTldK0AoKFxcdytcXC0rKXwoXFx3K1xcLikpKlxcd3sxLDYzfVxcLlthLXpBLVpdezIsNn0pJC87XHJcbiAgICByZXR1cm4gcmUudGVzdChlbWFpbCk7XHJcbiAgfTtcclxuXHJcbiAgbWUuaXNOdW1iZXIgPSBmdW5jdGlvbihudW1iZXIpIHtcclxuICAgIHZhciByZSA9IC9eXFxkKyQvO1xyXG4gICAgcmV0dXJuIHJlLnRlc3QobnVtYmVyKTtcclxuICB9O1xyXG5cclxuICBtZS5pc05vdEVtcHR5ID0gZnVuY3Rpb24oc3RyKSB7XHJcbiAgICByZXR1cm4gQm9vbGVhbihzdHIpO1xyXG4gIH07XHJcbiAgSVRWRE4udmFsaWRhdGlvbiA9IG1lO1xyXG59KSgpO1xyXG4iLCIoZnVuY3Rpb24oKSB7XHJcbiAgdmFyIG1lID0ge307XHJcbiAgdmFyIGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm0tY29udGFpbmVyXCIpO1xyXG4gIHZhciBjbG9zZUJ1dHRvbiA9IG51bGw7XHJcblxyXG4gIGZ1bmN0aW9uIG9uQ2xvc2UoKSB7XHJcbiAgICBtZS5jbG9zZSgpO1xyXG4gICAgY2xvc2VCdXR0b24ucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIG9uQ2xvc2UpO1xyXG4gIH1cclxuXHJcbiAgbWUub3BlbiA9IGZ1bmN0aW9uKCkge1xyXG4gICAgZm9ybS5jbGFzc0xpc3QucmVtb3ZlKFwiaXMtaGlkZGVuXCIpO1xyXG5cclxuICAgIGNsb3NlQnV0dG9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5mb3JtX19jbG9zZS1idXR0b25cIik7XHJcbiAgICBjbG9zZUJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgb25DbG9zZSk7XHJcbiAgfTtcclxuICBtZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xyXG4gICAgZm9ybS5jbGFzc0xpc3QuYWRkKFwiaXMtaGlkZGVuXCIpO1xyXG4gIH07XHJcblxyXG4gIG1lLmlzVmFsaWQgPSBmdW5jdGlvbigpIHtcclxuICAgIHZhciByZXF1aXJlZEZpZWxkcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXZhbGlkPVwicmVxdWlyZWRcIl0nKTtcclxuICAgIHZhciBlbWFpbFZhbHVlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIltkYXRhLWVtYWlsXVwiKS52YWx1ZTtcclxuICAgIHZhciBudW1iZXJWYWx1ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJbZGF0YS1udW1iZXJcIikudmFsdWU7XHJcblxyXG4gICAgaWYgKCFtZS5pc0FsbENvbXBsZXRlZChyZXF1aXJlZEZpZWxkcykpIHtcclxuICAgICAgY29uc29sZS5sb2coXCLQl9Cw0L/QvtC70L3QuNGC0LUg0L/QvtC20LDQu9GD0LnRgdGC0LAg0LLRgdC1INC90LXQvtCx0YXQvtC00LjQvNGL0LUg0L/QvtC70Y9cIik7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH0gZWxzZSBpZiAoIUlUVkROLnZhbGlkYXRpb24uaXNFbWFpbChlbWFpbFZhbHVlKSkge1xyXG4gICAgICBhbGVydChcItCd0LUg0LLQtdGA0L3Ri9C5IGVtYWlsXCIpO1xyXG4gICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9IGVsc2UgaWYgKCFJVFZETi52YWxpZGF0aW9uLmlzTnVtYmVyKG51bWJlclZhbHVlKSkge1xyXG4gICAgICBjb25zb2xlLmxvZyhcItCd0LUg0LLQtdGA0L3Ri9C5INC90L7QvNC10YBcIik7XHJcbiAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuICAgIHJldHVybiB0cnVlO1xyXG4gIH07XHJcblxyXG4gIG1lLmlzQWxsQ29tcGxldGVkID0gZnVuY3Rpb24oZGF0YSkge1xyXG4gICAgdmFyIHJlc3VsdCA9IHRydWU7XHJcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ2h0OyBpKyspIHtcclxuICAgICAgaWYgKCFJVFZETi52YWxpZGF0aW9uLmlzTm90RW1wdHkoZGF0YVtpXS52YWx1ZSkpIHtcclxuICAgICAgICBydXN1bHQgPSBmYWxzZTtcclxuICAgICAgICBicmVhaztcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHJlc3VsdDtcclxuICB9O1xyXG4gIElUVkROLmZvcm0gPSBtZTtcclxufSkoKTtcclxuIiwiKGZ1bmN0aW9uKCkge1xyXG4gIHZhciBtZSA9IHt9O1xyXG5cclxuICBtZS50b2dnbGVUb0FjdGl2ZUxpbmsgPSBmdW5jdGlvbih0YXJnZXQpIHtcclxuICAgIHZhciBsaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubmF2X19saW5rXCIpO1xyXG4gICAgdmFyIHNob3dlZFNlY3Rpb24gPSB0YXJnZXQuZGF0YXNldC5saW5rO1xyXG5cclxuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlua3MubGVuZ3RoOyBpKyspIHtcclxuICAgICAgaWYgKGxpbmtzW2ldLmNsYXNzTGlzdC5jb250YWlucyhcIm5hdl9fbGluay0tYWN0aXZlXCIpKSB7XHJcbiAgICAgICAgbGlua3NbaV0uY2xhc3NMaXN0LnJlbW92ZShcIm5hdl9fbGluay0tYWN0aXZlXCIpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICB0YXJnZXQuY2xhc3NMaXN0LmFkZChcIm5hdl9fbGluay0tYWN0aXZlXCIpO1xyXG4gICAgc2Nyb2xsVG9BY3RpdmVTZWN0aW9uKHNob3dlZFNlY3Rpb24pO1xyXG4gIH07XHJcblxyXG4gIGZ1bmN0aW9uIHNjcm9sbFRvQWN0aXZlU2VjdGlvbihzaG93ZWRTZWN0aW9uKSB7XHJcbiAgICB2YXIgc2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuXCIgKyBzaG93ZWRTZWN0aW9uKTtcclxuICAgIHZhciBjb29yZHMgPSBzZWN0aW9uLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpO1xyXG4gICAgdmFyIGFuaW1hdGVUaW1lID0gMC40O1xyXG4gIH1cclxuXHJcbiAgdmFyIHRpbWVySWQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbigpIHtcclxuICAgIGlmIChkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA8IGNvb3Jkcy50b3ApIHtcclxuICAgICAgd2luZG93LnNjcm9sbEJ5KDAsIDEwKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNsZWFySW50ZXJ2YWwodGltZXJJZCk7XHJcbiAgICB9XHJcbiAgfSwgYW5pbWF0ZVRpbWUgfHwgMC41KTtcclxuXHJcbiAgSVRWRE4ubmF2aWdhdGlvbiA9IG1lO1xyXG59KSgpO1xyXG4iLCIoZnVuY3Rpb24oKSB7XHJcbiAgLy9BZGQgZXZlbnQgbGlzdGVuZXIgZm9yIG9wZW4gZm9ybSBidXR0b25cclxuICB2YXIgb3BlbkZvcm1CdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFycm93LWRvd25cIik7XHJcbiAgdmFyIGZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmZvcm1cIik7XHJcbiAgdmFyIG5hdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2XCIpO1xyXG5cclxuICBpZiAob3BlbkZvcm1CdXR0b24pIHtcclxuICAgIG9wZW5Gb3JtQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbihlKSB7XHJcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICAgICAgSVRWRE4uZm9ybS5vcGVuKCk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIGlmIChmb3JtKSB7XHJcbiAgICBmb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgZnVuY3Rpb24oZSkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIGlmIChJVFZETi5mb3JtLmlzVmFsaWQoKSkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiQWxsIGdvb2RcIik7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJJcyBub3QgdmFsaWRcIik7XHJcbiAgICAgIH1cclxuICAgIH0pO1xyXG4gIH1cclxuICBpZiAobmF2KSB7XHJcbiAgICBuYXYuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKGUpIHtcclxuICAgICAgdmFyIHRhcmdldCA9IGUudGFyZ2V0O1xyXG5cclxuICAgICAgaWYgKHRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgIT09IFwiYVwiKSB7XHJcbiAgICAgICAgcmV0dXJuO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgIElUVkROLm5hdmlnYXRpb24udG9nZ2xlVG9BY3RpdmVMaW5rKHRhcmdldCk7XHJcbiAgICB9KTtcclxuICB9XHJcbn0pKCk7XHJcbiJdfQ==
